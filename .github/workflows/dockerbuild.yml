name: Build Multi-Stage Docker Image

on:
  push:
  workflow_dispatch:

jobs:
  GHRC:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      matrix:
        architecture: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - uses: FranzDiebold/github-env-vars-action@v2.8.0
      
      - name: Print architecture
        run: echo "TARGETARCH=${{ matrix.architecture }}"
        
      - name: Print environment variables
        run: |
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"

      - name: Prepare GHRC.io
        id: prep
        run: |
          REPO=$CI_REPOSITORY_NAME
          DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/${REPO}
          DATE=$(date +'%Y.%m.%d')

          if [ "$CI_REF_NAME" != "dev" ]; then
            VERSION=$DATE
            LATEST_TAG="latest"
          else
            VERSION="nightly"
            LATEST_TAG="nightly"
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${LATEST_TAG}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "title=${GITHUB_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push GHRC.io
        id: docker_build
        uses: docker/build-push-action@v6.15.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          build-args: |
            TARGETARCH=${{ matrix.architecture }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
